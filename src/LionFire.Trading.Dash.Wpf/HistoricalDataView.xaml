<UserControl x:Class="LionFire.Trading.Dash.Wpf.HistoricalDataView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LionFire.Trading.Dash.Wpf"
               xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                 xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
        x:Name="uc"
             xmlns:cal="http://www.caliburnproject.org"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800"
             >
    <UserControl.Resources>

        <BooleanToVisibilityConverter x:Key="bvc" ></BooleanToVisibilityConverter>

        <DataTemplate x:Key="TimelinePanelItem">
            <StackPanel>
                <TextBlock Text="{Binding Text}"></TextBlock>
                <CheckBox IsChecked="{Binding Loaded}">Loaded</CheckBox>
                <CheckBox IsChecked="{Binding IsPartial}" IsEnabled="False" >Partial</CheckBox>
            </StackPanel>
        </DataTemplate>


        <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderThickness" Value="1"/>
            <!--<Setter Property="BorderBrush" Value="Blue"/>-->
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center"                  Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="#99F" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>
    <DockPanel >
        <DockPanel DockPanel.Dock="Top" LastChildFill="False" Background="White">
            <DockPanel DockPanel.Dock="Top" LastChildFill="False">

                <ComboBox  MinWidth="100" ItemsSource="{Binding SymbolsAvailable}" SelectedValue="{Binding SelectedSymbolCode}" Margin="10"></ComboBox>
                <!--<ComboBox  MinWidth="100"  ItemsSource="{Binding TimeFramesAvailable}" SelectedValue="{Binding SelectedTimeFrame}"></ComboBox>-->
                <StackPanel Margin="0" Orientation="Horizontal">
                    <ToggleButton x:Name="T1" >t1</ToggleButton>
                    <ToggleButton x:Name="M1">m1</ToggleButton>
                    <ToggleButton x:Name="H1">h1</ToggleButton>
                    <CheckBox x:Name="CacheOnly" DockPanel.Dock="Bottom" VerticalAlignment="Center" ToolTip="If not set, To date will be forced to the current date, (or end date for backtesting.)">Cache Only</CheckBox>
                    <Border BorderBrush="LightBlue" BorderThickness="1.5" CornerRadius="5" Padding="3"  Margin="5" VerticalAlignment="Center" >
                        <StackPanel Orientation="Horizontal" >
                            <TextBlock >
                                 <Run Text="{Binding SelectedMarketSeries.Count, Mode=OneWay}"/>
                                <Run Text=" "/>
                                <Run Text="{Binding SelectedMarketSeries.DataPointName, Mode=OneWay}"/>
                            </TextBlock>
                            <TextBlock >
                                 <Run Text=" from "/>
                                <Run Text="{Binding SelectedMarketSeries.DataStartDate, StringFormat='{}{0:yyyy/MM/dd}', Mode=OneWay}"/>
                                <Run Text=" to "/>
                                <Run Text="{Binding SelectedMarketSeries.DataEndDate, StringFormat='{}{0:yyyy/MM/dd}', Mode=OneWay}"/>
                            </TextBlock>
                        </StackPanel>
                    </Border>
                    <Border Visibility="{Binding SelectedMarketSeries.IsLoading, Converter={StaticResource bvc}}" BorderBrush="LightBlue" BorderThickness="1.5" CornerRadius="5" 
                            Padding="3"  Margin="5" VerticalAlignment="Center" >
                        <StackPanel Orientation="Horizontal">
                        <TextBlock VerticalAlignment="Center" Margin="5 0 5 0" >
                            <TextBlock.RenderTransform>
                                <RotateTransform x:Name="noFreeze" CenterX="0.5" CenterY="0.5" />
                            </TextBlock.RenderTransform>
                            <TextBlock.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
            Storyboard.TargetProperty="(TextBlock.RenderTransform).(RotateTransform.Angle)"
            To="-360" Duration="0:0:1" RepeatBehavior="Forever" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </TextBlock.Triggers>
                            
                            <Run Text="&#xF339;" FontFamily="WebHostingHub-Glyphs" FontSize="10"/>

                        </TextBlock>
                        <TextBlock VerticalAlignment="Center">
                            <Run Text="Loading"/>
                        </TextBlock>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </DockPanel>

            <StackPanel Margin="5">
                <TextBlock Text="From" HorizontalAlignment="Center"/>
                <TextBlock Text="{Binding From}"  HorizontalAlignment="Center"/>
                <Calendar x:Name="From" SelectedDate="{Binding From}" DisplayMode="{Binding CalendarMode, Mode=OneWay}"></Calendar>
            </StackPanel>

            <StackPanel Margin="5" >
                <TextBlock Text="To" HorizontalAlignment="Center"/>
                <TextBlock Text="{Binding To}"   HorizontalAlignment="Center"/>
                <Calendar x:Name="To" IsEnabled="{Binding CanChangeToDate}" DisplayMode="{Binding CalendarMode, Mode=OneWay}"></Calendar>
                <!--SelectedDate="{Binding To}"-->
            </StackPanel>
            <DockPanel>

                <Button x:Name="Load" Width="{Binding ActualHeight, ElementName=Load}" Margin="10" DockPanel.Dock="Top">Load</Button>
            </DockPanel>
        </DockPanel>


        <ListBox x:Name="DataItems" >
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Button x:Name="LoadItem">Load</Button>
                        <TextBlock Text="{Binding}"></TextBlock>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>


    </DockPanel>

</UserControl>
